/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.0.2/userguide/building_java_projects.html
 */

plugins {
    id 'jacoco'
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'org.sonarqube' version '4.0.0.2929'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.1-jre'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    testLogging {
        events "standardOut", "standardError", "failed", "skipped", "passed", "started"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
        xml.outputLocation = file('build/jacoco/report.xml')
//        xml.destination = file('build/jacoco/report.xml')
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "ds-algo"
        property "sonar.organization", "galaumang"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.projectName", "DS Algo"
        property("sonar.coverage.jacoco.xmlReportPath", "build/jacoco/report.xml")
    }
}

project.task(sonar).dependsOn(jacocoTestReport)